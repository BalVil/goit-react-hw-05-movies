{"version":3,"file":"static/js/262.e5232790.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/BackButton/BackButton.module.css?d3a5","components/BackButton/BackButton.js","webpack://react-homework-template/./src/components/MovieContent/MovieContent.module.css?89a5","components/MovieContent/MovieContent.jsx","pages/MovieDetails.jsx","services/themoviedb-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"button\":\"BackButton_button__5Jmp+\",\"link\":\"BackButton_link__rwyG0\",\"svg\":\"BackButton_svg__VsCPS\"};","import { Link } from 'react-router-dom';\nimport { IoMdArrowRoundBack } from 'react-icons/io';\nimport styles from './BackButton.module.css';\n\nexport default function BackButton() {\n  return (\n    <button className={styles.button}>\n      <Link to={'/'} className={styles.link}>\n        <IoMdArrowRoundBack className={styles.svg} size={16} />\n        Go back\n      </Link>\n    </button>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"MovieContent_wrap__vCSQ4\",\"poster\":\"MovieContent_poster__PuNAL\",\"desc\":\"MovieContent_desc__CiVyn\",\"desc__item\":\"MovieContent_desc__item__81Swk\",\"desc__title\":\"MovieContent_desc__title__4tyJR\"};","import PropTypes from 'prop-types';\nimport styles from './MovieContent.module.css';\n\nexport default function MovieContent({ movie }) {\n  const {\n    title,\n    name,\n    overview,\n    genres,\n    release_date,\n    first_air_date,\n    poster_path,\n    vote_average,\n  } = movie;\n\n  const userScore = Math.round(vote_average * 10);\n\n  const noImage =\n    'https://static.wikia.nocookie.net/just-because/images/0/0c/NoImage_Available.png/revision/latest?cb=20170601005615';\n\n  const imageUrl = poster_path\n    ? `https://image.tmdb.org/t/p/w500${poster_path}`\n    : noImage;\n\n  const releaseDate = (first_air_date || release_date).slice(0, 4);\n\n  function getGenre(genres) {\n    const genreNames = genres.map(({ name }) => name);\n\n    return genreNames.join(', ') || 'No Genre';\n  }\n\n  return (\n    <>\n      <div className={styles.wrap}>\n        <div className={styles.poster}>\n          <img\n            data-action=\"poster\"\n            alt={title || name}\n            src={imageUrl}\n            width=\"240\"\n          />\n        </div>\n        <div className={styles.desc}>\n          <div className={styles.desc__item}>\n            <h2 className={styles.desc__title}>\n              {title || name} ({releaseDate})\n            </h2>\n            <p>User Score: {userScore}%</p>\n          </div>\n\n          <div className={styles.desc__item}>\n            <h3 className={styles.desc__title}>Overview</h3>\n            <p>{overview}</p>\n          </div>\n\n          <div className={styles.desc__item}></div>\n          <h4 className={styles.desc__title}>Genres</h4>\n          <p>{getGenre(genres)}</p>\n        </div>\n      </div>\n    </>\n  );\n}\n\nMovieContent.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string,\n    name: PropTypes.string,\n    overview: PropTypes.string,\n    genres: PropTypes.arrayOf(PropTypes.shape({ name: PropTypes.string })),\n    release_date: PropTypes.string,\n    first_air_date: PropTypes.string,\n    poster_path: PropTypes.string,\n    vote_average: PropTypes.number,\n  }).isRequired,\n};\n","import { useState, useEffect, Suspense } from 'react';\nimport { useParams, Outlet, Link } from 'react-router-dom';\nimport { fetchMovieDetails } from '../services/themoviedb-api';\nimport BackButton from 'components/BackButton/BackButton';\nimport MovieContent from 'components/MovieContent/MovieContent';\n\nexport default function MovieDetails() {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchMovieDetails(movieId)\n      .then(data => {\n        setMovie(data);\n      })\n      .catch(console.log);\n  }, [movieId]);\n\n  return (\n    <>\n      {!movie ? (\n        <h3>Loading...</h3>\n      ) : (\n        <>\n          <BackButton />\n          <MovieContent movie={movie} />\n          <div>\n            <p>Additional information</p>\n            <ul>\n              <li>\n                <Link to=\"cast\">Cast...</Link>\n              </li>\n              <li>\n                <Link to=\"reviews\">Reviews...</Link>\n              </li>\n            </ul>\n          </div>\n\n          <Suspense fallback={<h3>Loading...</h3>}>\n            <Outlet />\n          </Suspense>\n        </>\n      )}\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'api_key=5f364d2fc6b25c805674b50a1c63d59e';\n\nexport const fetchTrending = async () => {\n  const response = await axios.get(`${BASE_URL}/trending/movie/day?${API_KEY}`);\n  return response.data.results;\n};\n\nexport const fetchSearchMovies = async query => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?${API_KEY}&query=${query}&language=en-US`\n  );\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}?${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchMovieCast = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?${API_KEY}&language=en-US`\n  );\n  return response.data.results;\n};\n"],"names":["BackButton","className","styles","to","size","MovieContent","movie","title","name","overview","genres","release_date","first_air_date","poster_path","vote_average","userScore","Math","round","imageUrl","releaseDate","slice","alt","src","width","map","join","getGenre","MovieDetails","useState","setMovie","movieId","useParams","useEffect","fetchMovieDetails","then","data","catch","console","log","Suspense","fallback","BASE_URL","API_KEY","fetchTrending","axios","response","results","fetchSearchMovies","query","id","fetchMovieCast","cast","fetchMovieReviews"],"sourceRoot":""}
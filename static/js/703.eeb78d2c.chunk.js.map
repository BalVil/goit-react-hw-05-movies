{"version":3,"file":"static/js/703.eeb78d2c.chunk.js","mappings":"kPACA,EAAyB,2BAAzB,EAA2D,yBAA3D,EAA0F,wB,SCG3E,SAASA,IACtB,OACE,mBAAQC,UAAWC,EAAnB,UACE,UAAC,KAAD,CAAMC,GAAI,IAAKF,UAAWC,EAA1B,WACE,SAAC,KAAD,CAAoBD,UAAWC,EAAYE,KAAM,KADnD,cAML,CCPc,SAASC,IACtB,OAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAYR,IAVAE,EAAAA,EAAAA,YAAU,WACR,KACEC,EAAAA,EAAAA,IAAkBH,GAASI,MAAK,SAAAC,GAC9BN,EAASM,EACV,GAGF,CAFC,MAAOC,GACPC,QAAQC,IAAIF,EAAMG,QACnB,CACF,GAAE,CAACT,IAECF,EAAL,CAIA,IACEY,EAQEZ,EARFY,MACAC,EAOEb,EAPFa,KACAC,EAMEd,EANFc,SACAC,EAKEf,EALFe,OACAC,EAIEhB,EAJFgB,aACAC,EAGEjB,EAHFiB,eACAC,EAEElB,EAFFkB,YACAC,EACEnB,EADFmB,aAGIC,EAAYC,KAAKC,MAAqB,GAAfH,GAKvBI,EAAWL,EAAW,yCACUA,GAHpC,qHAMIM,GAAeP,GAAkBD,GAAcS,MAAM,EAAG,GAQ9D,OACE,iCACE,SAAChC,EAAD,KACA,4BACE,0BACE,gBAAKiC,IAAKd,GAASC,EAAMc,IAAKJ,EAAUK,MAAM,WAEhD,4BACE,4BACE,0BACGhB,GAASC,EADZ,KACoBW,EADpB,QAGA,wCAAgBJ,EAAhB,WAGF,4BACE,sCACA,uBAAIN,QAGN,oBACA,oCACA,uBA5BR,SAAkBC,GAGhB,OAFmBA,EAAOc,KAAI,qBAAGhB,IAAH,IAEZiB,KAAK,OAAS,UACjC,CAwBWC,CAAShB,YAMjB,4BACE,mDACA,2BACE,yBACE,SAAC,KAAD,CAAMnB,GAAG,OAAT,wBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,iCAKN,SAAC,EAAAoC,SAAD,CAAUC,UAAU,uCAApB,UACE,SAAC,KAAD,QAvEL,CA2EF,C,4MC/FKC,EAAW,+BACXC,EAAU,2CAEHC,EAAa,mCAAG,oGACJC,IAAAA,IAAA,UAAaH,EAAb,+BAA4CC,IADxC,cACrBG,EADqB,yBAEpBA,EAAS/B,KAAKgC,SAFM,2CAAH,qDAKbC,EAAiB,mCAAG,WAAMC,GAAN,uFACRJ,IAAAA,IAAA,UAClBH,EADkB,yBACOC,EADP,kBACwBM,EADxB,oBADQ,cACzBH,EADyB,yBAIxBA,EAAS/B,KAAKgC,SAJU,2CAAH,sDAOjBlC,EAAiB,mCAAG,WAAMqC,GAAN,uFACRL,IAAAA,IAAA,UAClBH,EADkB,kBACAQ,EADA,YACMP,EADN,oBADQ,cACzBG,EADyB,yBAIxBA,EAAS/B,MAJe,2CAAH,sDAOjBoC,EAAc,mCAAG,WAAMD,GAAN,uFACLL,IAAAA,IAAA,UAClBH,EADkB,kBACAQ,EADA,oBACcP,EADd,oBADK,cACtBG,EADsB,yBAIrBA,EAAS/B,KAAKqC,MAJO,2CAAH,sDAOdC,EAAiB,mCAAG,WAAMH,GAAN,uFACRL,IAAAA,IAAA,UAClBH,EADkB,kBACAQ,EADA,oBACcP,EADd,oBADQ,cACzBG,EADyB,yBAIxBA,EAAS/B,KAAKgC,SAJU,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/BackButton/BackButton.module.css?d3a5","components/BackButton/BackButton.js","pages/MovieDetails.jsx","services/themoviedb-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"button\":\"BackButton_button__5Jmp+\",\"link\":\"BackButton_link__rwyG0\",\"svg\":\"BackButton_svg__VsCPS\"};","import { Link } from 'react-router-dom';\nimport { IoMdArrowRoundBack } from 'react-icons/io';\nimport styles from './BackButton.module.css';\n\nexport default function BackButton() {\n  return (\n    <button className={styles.button}>\n      <Link to={'/'} className={styles.link}>\n        <IoMdArrowRoundBack className={styles.svg} size={16} />\n        Go back\n      </Link>\n    </button>\n  );\n}\n","import { useState, useEffect, Suspense } from 'react';\nimport { useParams, Outlet, Link } from 'react-router-dom';\nimport { fetchMovieDetails } from '../services/themoviedb-api';\nimport BackButton from 'components/BackButton/BackButton';\n// import MovieContent from 'components/MovieContent/MovieContent';\n\nexport default function MovieDetails() {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    try {\n      fetchMovieDetails(movieId).then(data => {\n        setMovie(data);\n      });\n    } catch (error) {\n      console.log(error.message);\n    }\n  }, [movieId]);\n\n  if (!movie) {\n    return;\n  }\n\n  const {\n    title,\n    name,\n    overview,\n    genres,\n    release_date,\n    first_air_date,\n    poster_path,\n    vote_average,\n  } = movie;\n\n  const userScore = Math.round(vote_average * 10);\n\n  const noImage =\n    'https://static.wikia.nocookie.net/just-because/images/0/0c/NoImage_Available.png/revision/latest?cb=20170601005615';\n\n  const imageUrl = poster_path\n    ? `https://image.tmdb.org/t/p/w500${poster_path}`\n    : noImage;\n\n  const releaseDate = (first_air_date || release_date).slice(0, 4);\n\n  function getGenre(genres) {\n    const genreNames = genres.map(({ name }) => name);\n\n    return genreNames.join(', ') || 'No Genre';\n  }\n\n  return (\n    <>\n      <BackButton />\n      <div>\n        <div>\n          <img alt={title || name} src={imageUrl} width=\"240\" />\n        </div>\n        <div>\n          <div>\n            <h2>\n              {title || name} ({releaseDate})\n            </h2>\n            <p>User Score: {userScore}%</p>\n          </div>\n\n          <div>\n            <h3>Overview</h3>\n            <p>{overview}</p>\n          </div>\n\n          <div></div>\n          <h4>Genres</h4>\n          <p>{getGenre(genres)}</p>\n        </div>\n      </div>\n\n      {/* <MovieContent movie={movie} /> */}\n\n      <div>\n        <p>Additional information</p>\n        <ul>\n          <li>\n            <Link to=\"cast\">Cast...</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews...</Link>\n          </li>\n        </ul>\n      </div>\n\n      <Suspense fallback={<h1>Loading...</h1>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'api_key=5f364d2fc6b25c805674b50a1c63d59e';\n\nexport const fetchTrending = async () => {\n  const response = await axios.get(`${BASE_URL}/trending/movie/day?${API_KEY}`);\n  return response.data.results;\n};\n\nexport const fetchSearchMovies = async query => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?${API_KEY}&query=${query}&language=en-US`\n  );\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}?${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchMovieCast = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?${API_KEY}&language=en-US`\n  );\n  return response.data.results;\n};\n"],"names":["BackButton","className","styles","to","size","MovieDetails","useState","movie","setMovie","movieId","useParams","useEffect","fetchMovieDetails","then","data","error","console","log","message","title","name","overview","genres","release_date","first_air_date","poster_path","vote_average","userScore","Math","round","imageUrl","releaseDate","slice","alt","src","width","map","join","getGenre","Suspense","fallback","BASE_URL","API_KEY","fetchTrending","axios","response","results","fetchSearchMovies","query","id","fetchMovieCast","cast","fetchMovieReviews"],"sourceRoot":""}
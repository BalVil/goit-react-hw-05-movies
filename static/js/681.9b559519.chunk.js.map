{"version":3,"file":"static/js/681.9b559519.chunk.js","mappings":"wOAIe,SAASA,IACtB,OAA8BC,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAYR,IAVAE,EAAAA,EAAAA,YAAU,WACR,KACEC,EAAAA,EAAAA,IAAkBH,GAASI,MAAK,SAAAC,GAC9BN,EAAWM,EACZ,GAGF,CAFC,MAAOC,GACPC,QAAQC,IAAIF,EAAMG,QACnB,CACF,GAAE,CAACT,IAECF,EAIL,OACE,8BACGA,EAAQY,OAAS,GAChB,wBACGZ,EAAQa,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,2BACE,oCAAYD,MACZ,uBAAIC,MAFGF,EADE,OAQf,wEAIP,C,4MCpCKG,EAAW,+BACXC,EAAU,2CAEHC,EAAa,mCAAG,oGACJC,IAAAA,IAAA,UAAaH,EAAb,+BAA4CC,IADxC,cACrBG,EADqB,yBAEpBA,EAASd,KAAKe,SAFM,2CAAH,qDAKbC,EAAiB,mCAAG,WAAMC,GAAN,uFACRJ,IAAAA,IAAA,UAClBH,EADkB,yBACOC,EADP,kBACwBM,EADxB,oBADQ,cACzBH,EADyB,yBAIxBA,EAASd,KAAKe,SAJU,2CAAH,sDAOjBG,EAAiB,mCAAG,WAAMX,GAAN,uFACRM,IAAAA,IAAA,UAClBH,EADkB,kBACAH,EADA,YACMI,EADN,oBADQ,cACzBG,EADyB,yBAIxBA,EAASd,MAJe,2CAAH,sDAOjBmB,EAAc,mCAAG,WAAMZ,GAAN,uFACLM,IAAAA,IAAA,UAClBH,EADkB,kBACAH,EADA,oBACcI,EADd,oBADK,cACtBG,EADsB,yBAIrBA,EAASd,KAAKoB,MAJO,2CAAH,sDAOdtB,EAAiB,mCAAG,WAAMS,GAAN,uFACRM,IAAAA,IAAA,UAClBH,EADkB,kBACAH,EADA,oBACcI,EADd,oBADQ,cACzBG,EADyB,yBAIxBA,EAASd,KAAKe,SAJU,2CAAH,qD","sources":["components/Reviews.jsx","services/themoviedb-api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from '../services/themoviedb-api';\n\nexport default function Reviews() {\n  const [reviews, setReviews] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    try {\n      fetchMovieReviews(movieId).then(data => {\n        setReviews(data);\n      });\n    } catch (error) {\n      console.log(error.message);\n    }\n  }, [movieId]);\n\n  if (!reviews) {\n    return;\n  }\n\n  return (\n    <>\n      {reviews.length > 0 ? (\n        <ul>\n          {reviews.map(({ id, author, content }) => (\n            <li key={id}>\n              <p>Author: {author}</p>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <div>We don`t have any reviews for this movie.</div>\n      )}\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'api_key=5f364d2fc6b25c805674b50a1c63d59e';\n\nexport const fetchTrending = async () => {\n  const response = await axios.get(`${BASE_URL}/trending/movie/day?${API_KEY}`);\n  return response.data.results;\n};\n\nexport const fetchSearchMovies = async query => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?${API_KEY}&query=${query}&language=en-US`\n  );\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}?${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchMovieCast = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?${API_KEY}&language=en-US`\n  );\n  return response.data.results;\n};\n"],"names":["Reviews","useState","reviews","setReviews","movieId","useParams","useEffect","fetchMovieReviews","then","data","error","console","log","message","length","map","id","author","content","BASE_URL","API_KEY","fetchTrending","axios","response","results","fetchSearchMovies","query","fetchMovieDetails","fetchMovieCast","cast"],"sourceRoot":""}
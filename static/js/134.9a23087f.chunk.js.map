{"version":3,"file":"static/js/134.9a23087f.chunk.js","mappings":"oLACA,EAAwB,yBAAxB,EAAsD,sBAAtD,EAAiF,sB,SCGlE,SAASA,EAAT,GAA2C,IAAtBC,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,UAC1C,OACE,gCACGA,IAAa,eAAIC,UAAWC,EAAf,SAA8BF,KAE5C,eAAIC,UAAWC,EAAf,SACGH,EAAOI,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,KAAd,OACV,eAAaL,UAAWC,EAAxB,UACE,SAAC,KAAD,CAAMK,GAAE,kBAAaH,GAArB,SAA4BC,GAASC,KAD9BF,EADC,QAQnB,C,iICbc,SAASI,IAAU,IAAD,EAC/B,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAK,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAE3C,GAAsCC,EAAAA,EAAAA,UAASF,GAA/C,eAAOG,EAAP,KAAoBC,EAApB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,MAArC,eAAOf,EAAP,KAAekB,EAAf,MAEAC,EAAAA,EAAAA,YAAU,WACR,GAAc,KAAVN,EAAJ,CAEAK,EAAU,MAEV,KACEE,EAAAA,EAAAA,IAAkBP,GAAOQ,MAAK,SAAAC,GAC5BC,QAAQC,IAAIF,GACZJ,EAAUI,EACX,GAGF,CAFC,MAAOG,GACPF,QAAQC,IAAIC,EAAMC,QACnB,CAXuB,CAYzB,GAAE,CAACb,IAgBJ,OACE,iCACE,kBAAMc,SAZW,SAAAC,GACnBA,EAAEC,iBAEF,IAAMC,EAAOF,EAAEG,OACTC,EAAkBF,EAAKjB,MAAMoB,MAAMC,cAAcC,OACvDvB,EAAgB,CAAEC,MAAOmB,IAEzBF,EAAKM,OACN,EAIiCC,aAAa,MAA3C,WACE,4BACE,kBACEC,SAnBW,SAAAV,GACnBX,EAAeW,EAAEG,OAAOE,MACzB,EAkBSA,MAAOjB,EACPuB,KAAK,OACLhC,KAAK,QACLiC,QAAQ,yHACRlC,MAAM,yIACNmC,UAAQ,OAGZ,mBAAQF,KAAK,SAAb,uBAEDvC,IAAU,SAAC,IAAD,CAAWA,OAAQA,MAGnC,C,4MC1DK0C,EAAW,+BACXC,EAAU,2CAEHC,EAAa,mCAAG,oGACJC,IAAAA,IAAA,UAAaH,EAAb,+BAA4CC,IADxC,cACrBG,EADqB,yBAEpBA,EAASxB,KAAKyB,SAFM,2CAAH,qDAKb3B,EAAiB,mCAAG,WAAMP,GAAN,uFACRgC,IAAAA,IAAA,UAClBH,EADkB,yBACOC,EADP,kBACwB9B,EADxB,oBADQ,cACzBiC,EADyB,yBAIxBA,EAASxB,KAAKyB,SAJU,2CAAH,sDAOjBC,EAAiB,mCAAG,WAAM3C,GAAN,uFACRwC,IAAAA,IAAA,UAClBH,EADkB,kBACArC,EADA,YACMsC,EADN,oBADQ,cACzBG,EADyB,yBAIxBA,EAASxB,MAJe,2CAAH,sDAOjB2B,EAAc,mCAAG,WAAM5C,GAAN,uFACLwC,IAAAA,IAAA,UAClBH,EADkB,kBACArC,EADA,oBACcsC,EADd,oBADK,cACtBG,EADsB,yBAIrBA,EAASxB,KAAK4B,MAJO,2CAAH,sDAOdC,EAAiB,mCAAG,WAAM9C,GAAN,uFACRwC,IAAAA,IAAA,UAClBH,EADkB,kBACArC,EADA,oBACcsC,EADd,oBADQ,cACzBG,EADyB,yBAIxBA,EAASxB,KAAKyB,SAJU,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.jsx","pages/Movies.jsx","services/themoviedb-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"title\":\"MovieList_title__QyMtJ\",\"ul\":\"MovieList_ul__tWrRZ\",\"li\":\"MovieList_li__kXkJl\"};","import { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport styles from './MovieList.module.css';\n\nexport default function MovieList({ movies, titlePage }) {\n  return (\n    <>\n      {titlePage && <h1 className={styles.title}>{titlePage}</h1>}\n\n      <ul className={styles.ul}>\n        {movies.map(({ id, title, name }) => (\n          <li key={id} className={styles.li}>\n            <Link to={`/movies/${id}`}>{title || name}</Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      name: PropTypes.string,\n    }).isRequired\n  ),\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchSearchMovies } from '../services/themoviedb-api';\nimport MovieList from 'components/MovieList/MovieList';\n\nexport default function Movies() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  const [searchValue, setSearchValue] = useState(query);\n  const [movies, setMovies] = useState(null);\n\n  useEffect(() => {\n    if (query === '') return;\n\n    setMovies(null);\n\n    try {\n      fetchSearchMovies(query).then(data => {\n        console.log(data);\n        setMovies(data);\n      });\n    } catch (error) {\n      console.log(error.message);\n    }\n  }, [query]);\n\n  const handleChange = e => {\n    setSearchValue(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const form = e.target;\n    const queryNormalized = form.query.value.toLowerCase().trim();\n    setSearchParams({ query: queryNormalized });\n\n    form.reset();\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} autoComplete=\"off\">\n        <label>\n          <input\n            onChange={handleChange}\n            value={searchValue}\n            type=\"text\"\n            name=\"query\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n        <button type=\"submit\">Search</button>\n      </form>\n      {movies && <MovieList movies={movies} />}\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'api_key=5f364d2fc6b25c805674b50a1c63d59e';\n\nexport const fetchTrending = async () => {\n  const response = await axios.get(`${BASE_URL}/trending/movie/day?${API_KEY}`);\n  return response.data.results;\n};\n\nexport const fetchSearchMovies = async query => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?${API_KEY}&query=${query}&language=en-US`\n  );\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}?${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchMovieCast = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?${API_KEY}&language=en-US`\n  );\n  return response.data.results;\n};\n"],"names":["MovieList","movies","titlePage","className","styles","map","id","title","name","to","Movies","useSearchParams","searchParams","setSearchParams","query","get","useState","searchValue","setSearchValue","setMovies","useEffect","fetchSearchMovies","then","data","console","log","error","message","onSubmit","e","preventDefault","form","target","queryNormalized","value","toLowerCase","trim","reset","autoComplete","onChange","type","pattern","required","BASE_URL","API_KEY","fetchTrending","axios","response","results","fetchMovieDetails","fetchMovieCast","cast","fetchMovieReviews"],"sourceRoot":""}
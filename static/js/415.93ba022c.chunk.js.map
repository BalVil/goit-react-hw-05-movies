{"version":3,"file":"static/js/415.93ba022c.chunk.js","mappings":"6LACA,EAAuB,wBAAvB,EAAsD,wBAAtD,EAAuF,0BAAvF,EAAyH,yB,SCuBzH,EApBkB,SAAC,GAA0C,IAAxCA,EAAuC,EAAvCA,WAAYC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,YAClCC,GAAWC,EAAAA,EAAAA,MAEXC,EAAWH,EAAW,yCACUA,GAClC,oEAEJ,OACE,SAAC,KAAD,CACEI,UAAWC,EACXC,GAAE,kBAAaP,GACfQ,MAAO,CAAEC,KAAMP,GAHjB,UAKE,gBAAIG,UAAWC,EAAf,WACE,gBAAKD,UAAWC,EAAeI,IAAKN,EAAUO,IAAI,MAClD,cAAGN,UAAWC,EAAd,SAA6BP,QAIpC,ECtBD,EAAwB,yBAAxB,EAAsD,sBCqBtD,EAlBkB,SAAC,GAA2B,IAAzBa,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,UAC3B,OACE,gCACGA,IAAa,eAAIR,UAAWC,EAAf,SAA8BO,KAE5C,eAAIR,UAAWC,EAAf,SACGM,EAAOE,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,KAAMC,EAApB,EAAoBA,YAApB,OACV,SAAC,EAAD,CAEEnB,WAAYiB,GAASC,EACrBjB,QAASe,EACTd,YAAaiB,GAHRH,EAFG,QAWnB,C,2FCCD,UAjBa,WACX,OAA4BI,EAAAA,EAAAA,UAAS,MAArC,eAAOP,EAAP,KAAeQ,EAAf,KAUA,OARAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MACGC,MAAK,SAAAC,GACJJ,EAAUI,EACX,IACAC,MAAMC,QAAQC,IAClB,GAAE,KAGD,gBAAKtB,UAAWC,EAAAA,EAAAA,UAAhB,SACGM,IAAU,SAAC,IAAD,CAAWA,OAAQA,EAAQC,UAAW,oBAGtD,C,4MCnBKe,EAAW,+BACXC,EAAU,2CAEHP,EAAa,mCAAG,oGACJQ,IAAAA,IAAA,UAAaF,EAAb,+BAA4CC,IADxC,cACrBE,EADqB,yBAEpBA,EAASP,KAAKQ,SAFM,2CAAH,qDAKbC,EAAiB,mCAAG,WAAMC,GAAN,uFACRJ,IAAAA,IAAA,UAClBF,EADkB,yBACOC,EADP,kBACwBK,EADxB,oBADQ,cACzBH,EADyB,yBAIxBA,EAASP,MAJe,2CAAH,sDAOjBW,EAAiB,mCAAG,WAAMpB,GAAN,uFACRe,IAAAA,IAAA,UAClBF,EADkB,kBACAb,EADA,YACMc,EADN,oBADQ,cACzBE,EADyB,yBAIxBA,EAASP,MAJe,2CAAH,sDAOjBY,EAAc,mCAAG,WAAMrB,GAAN,uFACLe,IAAAA,IAAA,UAClBF,EADkB,kBACAb,EADA,oBACcc,EADd,oBADK,cACtBE,EADsB,yBAIrBA,EAASP,KAAKa,MAJO,2CAAH,sDAOdC,EAAiB,mCAAG,WAAMvB,GAAN,uFACRe,IAAAA,IAAA,UAClBF,EADkB,kBACAb,EADA,oBACcc,EADd,oBADQ,cACzBE,EADyB,yBAIxBA,EAASP,KAAKQ,SAJU,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/MovieItem/MovieItem.module.css?431a","components/MovieItem/MovieItem.jsx","webpack://react-homework-template/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.jsx","pages/Home.jsx","services/themoviedb-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"MovieItem_item__iPuYx\",\"link\":\"MovieItem_link__mit6j\",\"poster\":\"MovieItem_poster__2QxTy\",\"title\":\"MovieItem_title__JQYXo\"};","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport styles from './MovieItem.module.css';\n\nconst MovieItem = ({ movieTitle, movieId, moviePoster }) => {\n  const location = useLocation();\n\n  const imageUrl = moviePoster\n    ? `https://image.tmdb.org/t/p/w500${moviePoster}`\n    : 'https://icon-library.com/images/no-image-icon/no-image-icon-0.jpg';\n\n  return (\n    <Link\n      className={styles.link}\n      to={`/movies/${movieId}`}\n      state={{ from: location }}\n    >\n      <li className={styles.item}>\n        <img className={styles.poster} src={imageUrl} alt=\"\" />\n        <p className={styles.title}>{movieTitle}</p>\n      </li>\n    </Link>\n  );\n};\nexport default MovieItem;\n\nMovieItem.propTypes = {\n  movieTitle: PropTypes.string,\n  movieId: PropTypes.number.isRequired,\n  moviePoster: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"MovieList_title__QyMtJ\",\"ul\":\"MovieList_ul__tWrRZ\"};","import PropTypes from 'prop-types';\nimport MovieItem from 'components/MovieItem/MovieItem';\nimport styles from './MovieList.module.css';\n\nconst MovieList = ({ movies, titlePage }) => {\n  return (\n    <>\n      {titlePage && <h1 className={styles.title}>{titlePage}</h1>}\n\n      <ul className={styles.ul}>\n        {movies.map(({ id, title, name, poster_path }) => (\n          <MovieItem\n            key={id}\n            movieTitle={title || name}\n            movieId={id}\n            moviePoster={poster_path}\n          />\n        ))}\n      </ul>\n    </>\n  );\n};\nexport default MovieList;\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      name: PropTypes.string,\n    }).isRequired\n  ),\n  titlePage: PropTypes.string,\n};\n","import { useState, useEffect } from 'react';\nimport { fetchTrending } from '../services/themoviedb-api';\nimport MovieList from 'components/MovieList/MovieList';\nimport styles from 'components/SharedLayout/SharedLayout.module.css';\n\nconst Home = () => {\n  const [movies, setMovies] = useState(null);\n\n  useEffect(() => {\n    fetchTrending()\n      .then(data => {\n        setMovies(data);\n      })\n      .catch(console.log);\n  }, []);\n\n  return (\n    <div className={styles.container}>\n      {movies && <MovieList movies={movies} titlePage={'Trending today'} />}\n    </div>\n  );\n};\nexport default Home;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'api_key=5f364d2fc6b25c805674b50a1c63d59e';\n\nexport const fetchTrending = async () => {\n  const response = await axios.get(`${BASE_URL}/trending/movie/day?${API_KEY}`);\n  return response.data.results;\n};\n\nexport const fetchSearchMovies = async query => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?${API_KEY}&query=${query}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchMovieDetails = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}?${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchMovieCast = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?${API_KEY}&language=en-US`\n  );\n  return response.data.results;\n};\n"],"names":["movieTitle","movieId","moviePoster","location","useLocation","imageUrl","className","styles","to","state","from","src","alt","movies","titlePage","map","id","title","name","poster_path","useState","setMovies","useEffect","fetchTrending","then","data","catch","console","log","BASE_URL","API_KEY","axios","response","results","fetchSearchMovies","query","fetchMovieDetails","fetchMovieCast","cast","fetchMovieReviews"],"sourceRoot":""}
{"version":3,"file":"static/js/597.bcb35938.chunk.js","mappings":"wOAIe,SAASA,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAUR,IARAE,EAAAA,EAAAA,YAAU,WACR,KACEC,EAAAA,EAAAA,IAAeH,GAASI,MAAK,SAAAC,GAAI,OAAIN,EAAQM,EAAZ,GAGlC,CAFC,MAAOC,GACPC,QAAQC,IAAIF,EAAMG,QACnB,CACF,GAAE,CAACT,IAECF,EAIL,OACE,+BACE,wBACGA,EAAKY,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OACR,0BACGF,GACC,gBACEG,IAAKF,EACLG,IAAG,yCAAoCJ,GACvCK,MAAM,SAGR,uCAEF,uBAAIJ,KACJ,uCAAeC,OAXRH,EADD,OAkBjB,C,4MCvCKO,EAAW,+BACXC,EAAU,2CAEHC,EAAa,mCAAG,oGACJC,IAAAA,IAAA,UAAaH,EAAb,+BAA4CC,IADxC,cACrBG,EADqB,yBAEpBA,EAASjB,KAAKkB,SAFM,2CAAH,qDAKbC,EAAiB,mCAAG,WAAMC,GAAN,uFACRJ,IAAAA,IAAA,UAClBH,EADkB,yBACOC,EADP,kBACwBM,EADxB,oBADQ,cACzBH,EADyB,yBAIxBA,EAASjB,KAAKkB,SAJU,2CAAH,sDAOjBG,EAAiB,mCAAG,WAAMf,GAAN,uFACRU,IAAAA,IAAA,UAClBH,EADkB,kBACAP,EADA,YACMQ,EADN,oBADQ,cACzBG,EADyB,yBAIxBA,EAASjB,MAJe,2CAAH,sDAOjBF,EAAc,mCAAG,WAAMQ,GAAN,uFACLU,IAAAA,IAAA,UAClBH,EADkB,kBACAP,EADA,oBACcQ,EADd,oBADK,cACtBG,EADsB,yBAIrBA,EAASjB,KAAKP,MAJO,2CAAH,sDAOd6B,EAAiB,mCAAG,WAAMhB,GAAN,uFACRU,IAAAA,IAAA,UAClBH,EADkB,kBACAP,EADA,oBACcQ,EADd,oBADQ,cACzBG,EADyB,yBAIxBA,EAASjB,KAAKkB,SAJU,2CAAH,qD","sources":["components/Cast.jsx","services/themoviedb-api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCast } from '../services/themoviedb-api';\n\nexport default function Cast() {\n  const [cast, setCast] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    try {\n      fetchMovieCast(movieId).then(data => setCast(data));\n    } catch (error) {\n      console.log(error.message);\n    }\n  }, [movieId]);\n\n  if (!cast) {\n    return;\n  }\n\n  return (\n    <>\n      <ul>\n        {cast.map(({ id, profile_path, name, character }) => (\n          <li key={id}>\n            {profile_path ? (\n              <img\n                alt={name}\n                src={`https://image.tmdb.org/t/p/w500${profile_path}`}\n                width=\"200\"\n              />\n            ) : (\n              <div>No image</div>\n            )}\n            <p>{name}</p>\n            <p>Character: {character}</p>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'api_key=5f364d2fc6b25c805674b50a1c63d59e';\n\nexport const fetchTrending = async () => {\n  const response = await axios.get(`${BASE_URL}/trending/movie/day?${API_KEY}`);\n  return response.data.results;\n};\n\nexport const fetchSearchMovies = async query => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?${API_KEY}&query=${query}&language=en-US`\n  );\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}?${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchMovieCast = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?${API_KEY}&language=en-US`\n  );\n  return response.data.results;\n};\n"],"names":["Cast","useState","cast","setCast","movieId","useParams","useEffect","fetchMovieCast","then","data","error","console","log","message","map","id","profile_path","name","character","alt","src","width","BASE_URL","API_KEY","fetchTrending","axios","response","results","fetchSearchMovies","query","fetchMovieDetails","fetchMovieReviews"],"sourceRoot":""}